//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pomelo.EntityFrameworkCore.MySql.Design.Properties {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///    A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class SqlServerDesignStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        internal SqlServerDesignStrings() {
        }
        
        /// <summary>
        ///    Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Pomelo.EntityFrameworkCore.MySql.Design.Properties.SqlServerDesignStrings", typeof(SqlServerDesignStrings).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///    Overrides the current thread's CurrentUICulture property for all
        ///    resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to For column {columnId} unable to interpret computed value {computedValue}. Will not generate code setting a computed value for the property {propertyName} on entity type {entityTypeName}..
        /// </summary>
        public static string CannotInterpretComputedValue {
            get {
                return ResourceManager.GetString("CannotInterpretComputedValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to For column {columnId} unable to interpret default value {defaultValue}. Will not generate code setting a default value for the property {propertyName} on entity type {entityTypeName}..
        /// </summary>
        public static string CannotInterpretDefaultValue {
            get {
                return ResourceManager.GetString("CannotInterpretDefaultValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Found a column on foreign key [{schemaName}].[{tableName}].[{fkName}] with an empty or null name. Not including column in foreign key.
        /// </summary>
        public static string ColumnNameEmptyOnForeignKey {
            get {
                return ResourceManager.GetString("ColumnNameEmptyOnForeignKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Found a column on index [{schemaName}].[{tableName}].[{indexName}] with an empty or null name. Not including column in index..
        /// </summary>
        public static string ColumnNameEmptyOnIndex {
            get {
                return ResourceManager.GetString("ColumnNameEmptyOnIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Found a column on table [{schemaName}].[{tableName}] with an empty or null name. Skipping column..
        /// </summary>
        public static string ColumnNameEmptyOnTable {
            get {
                return ResourceManager.GetString("ColumnNameEmptyOnTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Column {columnName} belongs to table [{schema}].[{tableName}] which is not included in the selection set. Skipping..
        /// </summary>
        public static string ColumnNotInSelectionSet {
            get {
                return ResourceManager.GetString("ColumnNotInSelectionSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to For column {columnId}. This column is set up as an Identity column, but the SQL Server data type is {sqlServerDataType}. This will be mapped to CLR type byte which does not allow the SqlServerValueGenerationStrategy.IdentityColumn setting. Generating a matching Property but ignoring the Identity setting..
        /// </summary>
        public static string DataTypeDoesNotAllowSqlServerIdentityStrategy {
            get {
                return ResourceManager.GetString("DataTypeDoesNotAllowSqlServerIdentityStrategy", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Foreign key column {columnName} belongs to foreign key {fkName} on table [{schema}].[{tableName}] which is not included in the selection set. Skipping..
        /// </summary>
        public static string ForeignKeyColumnNotInSelectionSet {
            get {
                return ResourceManager.GetString("ForeignKeyColumnNotInSelectionSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Found a foreign key on table [{schemaName}].[{tableName}] with an empty or null name. Skipping foreign key..
        /// </summary>
        public static string ForeignKeyNameEmpty {
            get {
                return ResourceManager.GetString("ForeignKeyNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Found column with schema: {schema}, table: {tableName}, column name: {columnName}, data type: {dataType}, ordinal: {ordinal}, nullable: {isNullable}, primary key ordinal: {primaryKeyOrdinal}, default value: {defaultValue}, computed value: {computedValue}, precision: {precision}, scale: {scale}, maximum length: {maxLength}, identity: {isIdentity}, computed: {isComputed}..
        /// </summary>
        public static string FoundColumn {
            get {
                return ResourceManager.GetString("FoundColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Found default schema {defaultSchema}..
        /// </summary>
        public static string FoundDefaultSchema {
            get {
                return ResourceManager.GetString("FoundDefaultSchema", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Found foreign key column with schema: {schema}, table: {tableName}, foreign key name: {fkName}, principal table schema: {principalTableSchema}, principal table: {principalTableName}, column name: {columnName}, principal column name: {principalColumnName}, update action: {updateAction}, delete action: {deleteAction}, ordinal: {ordinal}..
        /// </summary>
        public static string FoundForeignKeyColumn {
            get {
                return ResourceManager.GetString("FoundForeignKeyColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Found index column with schema: {schema}, table: {tableName}, index name: {indexName}, unique: {isUnique}, type description: {typeDesc}, column name: {columnName}, ordinal: {ordinal}..
        /// </summary>
        public static string FoundIndexColumn {
            get {
                return ResourceManager.GetString("FoundIndexColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Found sequence with schema: {schema}, name: {name}, data type: {dataType}, cyclic: {isCyclic}, increment: {increment}, start: {start}, minimum: {min}, maximum: {max}..
        /// </summary>
        public static string FoundSequence {
            get {
                return ResourceManager.GetString("FoundSequence", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Found table with schema: {schema}, name: {name}..
        /// </summary>
        public static string FoundTable {
            get {
                return ResourceManager.GetString("FoundTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Found type alias {alias} which maps to underlying data type {dataType}..
        /// </summary>
        public static string FoundTypeAlias {
            get {
                return ResourceManager.GetString("FoundTypeAlias", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Index column {columnName} belongs to index {indexName} on table [{schema}].[{tableName}] which is not included in the selection set. Skipping..
        /// </summary>
        public static string IndexColumnNotInSelectionSet {
            get {
                return ResourceManager.GetString("IndexColumnNotInSelectionSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Found an index on table [{schemaName}].[{tableName}] with an empty or null name. Skipping index..
        /// </summary>
        public static string IndexNameEmpty {
            get {
                return ResourceManager.GetString("IndexNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to For foreign key {fkName} on table [{schema}].[{tableName}], unable to model the end of the foreign key on principal table [{principalTableSchema}].[{principalTableName}]. This is usually because the principal table was not included in the selection set..
        /// </summary>
        public static string PrincipalTableNotInSelectionSet {
            get {
                return ResourceManager.GetString("PrincipalTableNotInSelectionSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Found a sequence in schema [{schemaName}] with an empty or null name. Skipping sequence..
        /// </summary>
        public static string SequenceNameEmpty {
            get {
                return ResourceManager.GetString("SequenceNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Table [{schema}].[{tableName}] is not included in the selection set. Skipping..
        /// </summary>
        public static string TableNotInSelectionSet {
            get {
                return ResourceManager.GetString("TableNotInSelectionSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to For column {columnId} unable to convert default value {defaultValue} into type {propertyType}. Will not generate code setting a default value for the property {propertyName} on entity type {entityTypeName}..
        /// </summary>
        public static string UnableToConvertDefaultValue {
            get {
                return ResourceManager.GetString("UnableToConvertDefaultValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Foreign Key {fkName} contains a column named {columnName} which cannot be found on table [{schemaName}].[{tableName}]. Not including column in foreign key..
        /// </summary>
        public static string UnableToFindColumnForForeignKey {
            get {
                return ResourceManager.GetString("UnableToFindColumnForForeignKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Index {indexName} contains a column named {columnName} which cannot be found on table [{schemaName}].[{tableName}]. Not including column in index..
        /// </summary>
        public static string UnableToFindColumnForIndex {
            get {
                return ResourceManager.GetString("UnableToFindColumnForIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to For column {columnName}. Unable to find parent table [{schemaName}].[{tablename}]. Skipping column..
        /// </summary>
        public static string UnableToFindTableForColumn {
            get {
                return ResourceManager.GetString("UnableToFindTableForColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to For index {indexName}. Unable to find parent table [{schemaName}].[{tableName}]. Skipping index..
        /// </summary>
        public static string UnableToFindTableForIndex {
            get {
                return ResourceManager.GetString("UnableToFindTableForIndex", resourceCulture);
            }
        }
    }
}
