<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>$(DefaultNetCoreTargetFramework)</TargetFramework>
    <LegacyTargetFramework>$(DefaultNetCoreLegacyTargetFramework)</LegacyTargetFramework>
    <AssemblyName>Pomelo.EntityFrameworkCore.MySql.IntegrationTests</AssemblyName>
    <StartupObject>Pomelo.EntityFrameworkCore.MySql.IntegrationTests.Program</StartupObject>
    <OutputType>Exe</OutputType>
    <PackageId>Pomelo.EntityFrameworkCore.MySql.IntegrationTests</PackageId>
    <ServerGarbageCollection>true</ServerGarbageCollection>
    <ConcurrentGarbageCollection>true</ConcurrentGarbageCollection>
    <ThreadPoolMinThreads>64</ThreadPoolMinThreads>
    <RootNamespace>Pomelo.EntityFrameworkCore.MySql.IntegrationTests</RootNamespace>
  </PropertyGroup>

  <PropertyGroup>
    <MSBuildWarningsAsMessages>$(MSBuildWarningsAsMessages);$(NoWarn)</MSBuildWarningsAsMessages>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="..\Shared\**\*.cs" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" />
    <PackageReference Include="Newtonsoft.Json" />
  </ItemGroup>

  <ItemGroup Condition="'$(LocalEFCoreRepository)' == ''">
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Relational.Specification.Tests" />
  </ItemGroup>

  <ItemGroup Condition="'$(LocalMySqlConnectorRepository)' == ''">
    <PackageReference Include="MySqlConnector" />
  </ItemGroup>

  <ItemGroup Condition="'$(LocalEFCoreRepository)' != ''">
    <Reference Include="Microsoft.EntityFrameworkCore">
      <HintPath>$(LocalEFCoreRepository)\artifacts\bin\EFCore.Design.Tests\Debug\$(LegacyTargetFramework)\Microsoft.EntityFrameworkCore.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.EntityFrameworkCore.Abstractions">
      <HintPath>$(LocalEFCoreRepository)\artifacts\bin\EFCore.Design.Tests\Debug\$(LegacyTargetFramework)\Microsoft.EntityFrameworkCore.Abstractions.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.EntityFrameworkCore.Analyzers">
      <HintPath>$(LocalEFCoreRepository)\artifacts\bin\EFCore.Design.Tests\Debug\$(LegacyTargetFramework)\Microsoft.EntityFrameworkCore.Analyzers.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.EntityFrameworkCore.Design">
      <HintPath>$(LocalEFCoreRepository)\artifacts\bin\EFCore.Design.Tests\Debug\$(LegacyTargetFramework)\Microsoft.EntityFrameworkCore.Design.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.EntityFrameworkCore.Relational">
      <HintPath>$(LocalEFCoreRepository)\artifacts\bin\EFCore.Design.Tests\Debug\$(LegacyTargetFramework)\Microsoft.EntityFrameworkCore.Relational.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.EntityFrameworkCore.Specification.Tests">
      <HintPath>$(LocalEFCoreRepository)\artifacts\bin\EFCore.Relational.Tests\Debug\$(LegacyTargetFramework)\Microsoft.EntityFrameworkCore.Specification.Tests.dll</HintPath>
    </Reference>

    <!--
    The Microsoft.AspNetCore.Identity.EntityFrameworkCore package references Microsoft.EntityFrameworkCore.Relational.
    Because of that, this project does transitively as well. Since this leads to multiple versions of the same package
    (local and NuGet) being discovered, it also can also result in navigating to SourceLink files instead of local files.
    The workaround is to explicitly reference the transitive package and then exclude it.
    See https://github.com/dotnet/sdk/issues/1151
    -->
    <PackageReference Include="Microsoft.EntityFrameworkCore.Relational" ExcludeAssets="all" />
  </ItemGroup>

  <ItemGroup Condition="'$(LocalMySqlConnectorRepository)' != ''">
    <Reference Include="MySqlConnector">
      <HintPath>$(LocalMySqlConnectorRepository)\src\MySqlConnector\bin\Debug\$(TargetFramework)\MySqlConnector.dll</HintPath>
    </Reference>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\src\EFCore.MySql\EFCore.MySql.csproj" />
    <ProjectReference Include="..\..\src\EFCore.MySql.Json.Newtonsoft\EFCore.MySql.Json.Newtonsoft.csproj" />
  </ItemGroup>

  <ItemGroup>
    <AppConfig Include="appsettings.json" />
    <AppConfig Include="config.json" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="TestResults\**" />
  </ItemGroup>

  <Target Name="CheckConfigFile" BeforeTargets="Build">
    <Error Condition="!Exists('config.json')" Text="The &quot;config.json&quot; file could not be found. This file is mandatory to run the &quot;$(ProjectName)&quot; tests and needs to be created and configured after cloning the repository. The necessary setup steps are described in the &quot;README.md&quot; file, that is located in the base directory of the &quot;$(ProjectName)&quot; project." />
  </Target>
  <Target Name="CopyDirsAfterBuild" AfterTargets="Build">
    <Copy SourceFiles="@(AppConfig)" DestinationFolder="$(OutDir)\%(RecursiveDir)" SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true" Retries="3" RetryDelayMilliseconds="300" />
  </Target>
  <Target Name="CopyDirsAfterPublish" AfterTargets="Publish">
    <Copy SourceFiles="@(AppConfig)" DestinationFolder="$(PublishDir)\%(RecursiveDir)" SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true" Retries="3" RetryDelayMilliseconds="300" />
  </Target>

</Project>
